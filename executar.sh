#!/bin/bash

# Organizador de Arquivos com IA - Vers√£o Avan√ßada
# Script de execu√ß√£o para Linux/Mac

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para imprimir cabe√ßalho
print_header() {
    echo -e "${BLUE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë          üóÇÔ∏è  ORGANIZADOR DE ARQUIVOS COM IA                  ‚ïë"
    echo "‚ïë                    Vers√£o Avan√ßada 2.0.0                    ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
    echo
}

# Fun√ß√£o para verificar Python
check_python() {
    if command -v python3 &> /dev/null; then
        PYTHON_CMD="python3"
    elif command -v python &> /dev/null; then
        PYTHON_CMD="python"
    else
        echo -e "${RED}‚ùå Python n√£o encontrado!${NC}"
        echo
        echo "Por favor, instale o Python 3.8 ou superior:"
        echo "- Ubuntu/Debian: sudo apt install python3"
        echo "- CentOS/RHEL: sudo yum install python3"
        echo "- macOS: brew install python3"
        echo
        exit 1
    fi
    
    # Verificar vers√£o do Python
    PYTHON_VERSION=$($PYTHON_CMD --version 2>&1 | cut -d' ' -f2)
    MAJOR_VERSION=$(echo $PYTHON_VERSION | cut -d'.' -f1)
    MINOR_VERSION=$(echo $PYTHON_VERSION | cut -d'.' -f2)
    
    if [ "$MAJOR_VERSION" -lt 3 ] || ([ "$MAJOR_VERSION" -eq 3 ] && [ "$MINOR_VERSION" -lt 8 ]); then
        echo -e "${RED}‚ùå Python $PYTHON_VERSION encontrado, mas √© necess√°rio Python 3.8+${NC}"
        echo
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ Python $PYTHON_VERSION encontrado${NC}"
}

# Fun√ß√£o para verificar arquivos
check_files() {
    if [ ! -f "main.py" ]; then
        echo -e "${RED}‚ùå Arquivo main.py n√£o encontrado!${NC}"
        echo
        echo "Certifique-se de estar no diret√≥rio correto do projeto."
        echo
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ Arquivos do projeto encontrados${NC}"
}

# Fun√ß√£o para criar diret√≥rios necess√°rios
setup_directories() {
    mkdir -p logs
    mkdir -p backups
    mkdir -p temp
    echo -e "${GREEN}‚úÖ Diret√≥rios configurados${NC}"
}

# Fun√ß√£o para executar aplica√ß√£o
run_application() {
    echo -e "${YELLOW}üöÄ Iniciando aplica√ß√£o...${NC}"
    echo
    
    $PYTHON_CMD main.py
    
    if [ $? -eq 0 ]; then
        echo
        echo -e "${GREEN}‚úÖ Aplica√ß√£o finalizada com sucesso!${NC}"
    else
        echo
        echo -e "${RED}‚ùå Erro na execu√ß√£o da aplica√ß√£o!${NC}"
        echo
        echo "Poss√≠veis solu√ß√µes:"
        echo "1. Verifique se todos os arquivos est√£o presentes"
        echo "2. Execute com permiss√µes adequadas"
        echo "3. Verifique se o Python 3.8+ est√° instalado"
        echo "4. Verifique se tkinter est√° instalado (sudo apt install python3-tk no Ubuntu)"
        echo
        exit 1
    fi
}

# Fun√ß√£o principal
main() {
    print_header
    check_python
    check_files
    setup_directories
    echo
    run_application
}

# Executar fun√ß√£o principal
main